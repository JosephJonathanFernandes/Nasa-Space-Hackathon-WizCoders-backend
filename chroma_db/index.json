<<<<<<< HEAD
[{"id": "test.txt_0", "document": "// ExtendC Language Comprehensive Test Cases\r\n\r\n// Testing all lexical analyzer features\r\n\r\n\r\n/*\r\n\r\nMulti-line comment\r\n\r\nTesting multi-line comment detection\r\n\r\n*/\r\n\r\n\r\n// 1. Testing Keywords - Standard C Keywords\r\n\r\nint main() {\r\n\r\nauto char const continue default do double else enum extern\r\n\r\nfloat for goto if long register return short signed sizeof\r\n\r\nstatic struct switch typedef union unsigned void volatile while\r\n\r\nbreak case\r\n\r\n}\r\n\r\n\r\n// 2. Testing New ExtendC Keywords\r\n\r\nphone phoneVar;\r\n\r\nemail emailVar;\r\n\r\n\r\n// 3. Testing Identifiers\r\n\r\nint variable1;\r\n\r\nfloat _privateVar;\r\n\r\nchar userName123;\r\n\r\nint _valid_identifier;\r\n\r\n\r\n// 4. Testing Integer Constants\r\n\r\nint num1 = 0;\r\n\r\nint num2 = 123;\r\n\r\nint num3 = 999999;\r\n\r\n\r\n// 5. Testing Float Constants\r\n\r\nfloat pi = 3.14;\r\n\r\nfloat rate = 0.05;\r\n\r\nfloat large = 999.999;\r\n\r\n\r\n// 6. Testing String Constants\r\n\r\nchar* message = \"Hello World\";\r\n\r\nchar* path = \"C:\\\\Users\\\\Documents\\\\file.txt\";\r\n\r\nchar* escaped = \"Line1\\nLine2\\tTabbed\";", "metadata": {"source": "test.txt", "chunk_index": 0}}, {"id": "test.txt_1", "document": "e = 0.05;\r\n\r\nfloat large = 999.999;\r\n\r\n\r\n// 6. Testing String Constants\r\n\r\nchar* message = \"Hello World\";\r\n\r\nchar* path = \"C:\\\\Users\\\\Documents\\\\file.txt\";\r\n\r\nchar* escaped = \"Line1\\nLine2\\tTabbed\";\r\n\r\nchar* quote = \"He said \\\"Hello\\\"\";\r\n\r\n\r\n// 7. Testing Character Constants\r\n\r\nchar ch1 = 'A';\r\n\r\nchar ch2 = '5';\r\n\r\nchar ch3 = '\\n';\r\n\r\nchar ch4 = '\\'';\r\n\r\nchar ch5 = '\\\\';\r\n\r\n\r\n// 8. Testing Phone Number Patterns\r\n\r\nphone p1 = 9876543210; // 10 digits\r\n\r\nphone p2 = +91-9876543210; // With country code\r\n\r\nphone p3 = 1234567890; // Another valid 10-digit\r\n\r\n\r\n// 9. Testing Email Address Patterns\r\n\r\nemail e1 = user@example.com;\r\n\r\nemail e2 = first.last@domain.co.in;\r\n\r\nemail e3 = test123@gmail.com;\r\n\r\nemail e4 = admin_user@company.org;\r\n\r\nemail e5 = contact+info@website.net;\r\n\r\n\r\n// 10. Testing All Operators\r\n\r\nint a = 5;\r\n\r\nint b = 10;\r\n\r\nif (a == b) a++;\r\n\r\nif (a != b) b--;\r\n\r\nif (a < b) a = a + b;\r\n\r\nif (a > b) a = a - b;\r\n\r\nif (a <= b) a = a * b;\r\n\r\nif (a >= b) a = a / b;\r\n\r\n\r\n// 11. Te", "metadata": {"source": "test.txt", "chunk_index": 1}}, {"id": "test.txt_2", "document": "All Operators\r\n\r\nint a = 5;\r\n\r\nint b = 10;\r\n\r\nif (a == b) a++;\r\n\r\nif (a != b) b--;\r\n\r\nif (a < b) a = a + b;\r\n\r\nif (a > b) a = a - b;\r\n\r\nif (a <= b) a = a * b;\r\n\r\nif (a >= b) a = a / b;\r\n\r\n\r\n// 11. Testing All Punctuators\r\n\r\n{\r\n\r\nint arr[5];\r\n\r\nfunc(a, b, c);\r\n\r\nstatement1;\r\n\r\nstatement2;\r\n\r\n}\r\n\r\n\r\n// 12. Testing Comments in Different Positions\r\n\r\nint x = 5; // End of line comment\r\n\r\n// Comment at beginning of line\r\n\r\n/* Inline comment */ int y = 10;\r\n\r\n\r\n/*\r\n\r\nMulti-line comment\r\n\r\nwith multiple lines\r\n\r\nand various content: symbols @#$%^&*()\r\n\r\n*/\r\n\r\n\r\n// 13. Testing Mixed Complex Expressions\r\n\r\nif ((x + y) >= (a * b)) {\r\n\r\nphone contact = +91-9999888877;\r\n\r\nemail notify = admin@system.com;\r\n\r\nchar msg = 'Y';\r\n\r\nfloat result = 123.456;\r\n\r\n}\r\n\r\n\r\n// 14. Testing Edge Cases", "metadata": {"source": "test.txt", "chunk_index": 2}}]
=======
[{"id": "test.txt_0", "document": "We present 2241 exoplanet candidates identified with data from the Transiting Exoplanet Survey Satellite (TESS)\r\n during its 2 yr Prime Mission. We list these candidates in the TESS Objects of Interest (TOI) Catalog, which\r\n includes both new planet candidates found by TESS and previously known planets recovered by TESS\r\n observations. We describe the process used to identify TOIs, investigate the characteristics of the new planet\r\n candidates, and discuss some notable TESS planet discoveries. The TOI catalog includes an unprecedented number\r\n of small planet candidates around nearby bright stars, which are well suited for detailed follow-up observations.\r\n The TESS data products for the Prime Mission (sectors 1–26), including the TOI catalog, light curves, full-frame\r\n images, and target pixel files, are publicly available at the Mikulski Archive for Space Telescopes.", "metadata": {"source": "test.txt", "chunk_index": 0}}, {"id": "test.txt_1", "document": "We present 2241 exoplanet candidates identified with data from the Transiting Exoplanet Survey Satellite (TESS)\r\n during its 2 yr Prime Mission. We list these candidates in the TESS Objects of Interest (TOI) Catalog, which\r\n includes both new planet candidates found by TESS and previously known planets recovered by TESS\r\n observations. We describe the process used to identify TOIs, investigate the characteristics of the new planet\r\n candidates, and discuss some notable TESS planet discoveries. The TOI catalog includes an unprecedented number\r\n of small planet candidates around nearby bright stars, which are well suited for detailed follow-up observations.\r\n The TESS data products for the Prime Mission (sectors 1–26), including the TOI catalog, light curves, full-frame\r\n images, and target pixel files, are publicly available at the Mikulski Archive for Space Telescopes.", "metadata": {"source": "test.txt", "chunk_index": 1}}]
>>>>>>> 07635716c65dd104dc3400ba272f775f4fa6a323
